<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.cleanride</groupId>
        <artifactId>cleanride-backend</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>cleanride-spec</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Spring Boot Web (for @RestController, @GetMapping, etc.) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>3.1.4</version> <!-- Example version -->
        </dependency>

        <!-- Validation (for @Valid, @NotNull, etc.) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>3.1.4</version> <!-- Example version -->
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.2</version>  <!-- Use the latest version if you like -->
        </dependency>

        <!-- Jackson (already included by spring-boot-starter-web, but can specify explicitly) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.0</version> <!-- Example version -->
        </dependency>

        <!-- If you want SpringDoc for OpenAPI/Swagger integration -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.7.0</version> <!-- Example version -->
        </dependency>

        <!-- (Optional) If you want the ‘javax.servlet.http’ or Jakarta APIs directly -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.28</version> <!-- or whatever the latest is -->
            <scope>provided</scope> <!-- Typically provided scope for Lombok -->
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.0.0</version>
                <executions>
                    <execution>
                        <id>generate-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/specs/api.yaml</inputSpec>
                            <generatorName>spring</generatorName>

                            <!-- We don't want the final output in 'cleanride-spec/target/...', but let's keep it minimal. -->
                            <output>${project.parent.basedir}/cleanride-api/target/generated-sources</output>

                            <!-- Packages for your generated classes -->
                            <apiPackage>com.cleanride.api</apiPackage>
                            <modelPackage>com.cleanride.model</modelPackage>

                            <configOptions>
                                <sourceFolder>src/main/java</sourceFolder>
                                <useJakartaEe>true</useJakartaEe>
                                <useLombok>true</useLombok>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useInterfaceDefaultMethods>false</useInterfaceDefaultMethods>
                                <!--suppress UnresolvedMavenProperty -->
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>